# Use an official Ubuntu runtime as a parent image
FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive


# Set the working directory in the container
WORKDIR /app

# Instalar dependências necessárias
RUN apt-get update && \
    apt-get install -y \
    software-properties-common \
    wget \
    unzip \
    tzdata \
    curl \
    apt-utils \
    build-essential \
    libgl1-mesa-glx

# Adicionar repositório deadsnakes para versões mais recentes do Python
RUN add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y \
    python3.9 \
    python3.9-venv \
    python3.9-dev

# Instala pip separadamente
RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
    python3.9 get-pip.py

# Define o fuso horário
RUN ln -fs /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata

# Copia os scripts para o contêiner
COPY setup_envs.sh /app/
COPY run_tools.sh /app/

# Copia o conteúdo do diretório atual para o contêiner em /app
COPY src/autogluon_test.py /app/src/
COPY src/autopytorch_test.py /app/src/
COPY src/autosklearn_test.py /app/src/
COPY src/hypergbm_test.py /app/src/
COPY src/lightautoml_test.py /app/src/
COPY src/mljar_test.py /app/src/
COPY src/tpot_test.py /app/src/

# Copia a pasta de datasets para o contêiner
COPY Datasets /app/Datasets

# Torna os scripts executáveis
RUN chmod +x /app/setup_envs.sh
RUN chmod +x /app/run_tools.sh

# Executa o script de configuração dos ambientes
RUN /app/setup_envs.sh

# Define o entrypoint script
CMD ["/app/run_tools.sh", "--d"]

